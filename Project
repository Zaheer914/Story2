--Creating database if it does not exist
if Not Exists(Select * from sys.databases where name = 'Movie_Mangement')
Begin
	Create DataBase [Movie_Mangement]
	
End

Go

Use [Movie_Mangement]

Go

--Create Table of Geners If Not Exist 
If Not Exists (Select * from sys.objects where name ='Geners')
Begin
	Create Table Geners(
	Genres_Id int Identity(1,1) Not Null,
	Name varchar(50) Not Null,
	Primary Key(Genres_Id)
	)

End

Go
--Create Table of Movies If Not Exist 
If Not Exists (Select * from sys.objects where name ='Movies')
Begin
	Create Table Movies(
	Movie_Id int Identity(1,1) Not Null,
	Name varchar(50) Not Null,
	Price Int Not Null,
	Primary Key(Movie_Id)
	)
End

if Not Exists (Select * from sys.objects where name = 'Geners_in_Movies')
Begin
	Create Table Geners_in_Movies(
	Genres_Id Int Not Null,
	Movie_Id int Not Null,
	Foreign key (Genres_Id) References Geners(Genres_Id),
	Foreign Key (Movie_Id) References Movies(Movie_Id)
	)
End

Go


--Create a Customer Information Table To Login
if Not Exists (Select * from sys.objects where name = 'Users')
Begin
	Create Table Users(
	Users_Id int Identity(1,1) Not Null,
	Name varchar(50) Not Null,
	Email varchar(100) Not Null,
	UserName varchar(50) Not Null,
	UserPassword varchar(50) Not Null,
	role varchar(50) Not Null,
	Primary Key (Users_Id)
	)
End

Go
--Create a cart to store User Information Wants to purchase
if Not Exists (Select * from sys.objects where name = 'Cart')
Begin
	Create Table Cart(
	Customer_Id int Not Null,
	Movie_Id int Not Null,
	Foreign key (Customer_Id) References Users(Users_Id),	
	Foreign key (Movie_Id) References Movies(Movie_Id),	
	)
End

Go
--Create a cart to store User Information Wants to purchase
if Not Exists (Select * from sys.objects where name = 'Purchase')
Begin
	Create Table Purchase(
	Bill_Id Int Identity(1,1) Not Null,
	Customer_Id int Not Null,
	currentDate date Default GetDate()  Not Null,
	Primary Key(Bill_Id),
	Foreign key (Customer_Id) References Users(Users_Id),
	
	)
End

Go
if Not Exists (Select * from sys.objects where name = 'Bill_Detail')
Begin
	Create Table Bill_Detail(
	Bill_Id Int Not Null,
	Movie_Id Int Not Null,
	Price Int Not Null,
	Foreign key (Bill_Id) References Purchase(Bill_Id),
	Foreign Key (Movie_Id) References Movies(Movie_Id)
	)
End

--drop table Bill_Detail
--drop table Purchase
--Go
----Create a cart to store User Information Bill of purchase
--if Not Exists (Select * from sys.objects where name = 'Bill')
--Begin
--	Create Table Bill(
--	Customer_Id int Not Null,
--	Price int Not Null,
--	Movie_Name varchar(50) Not Null,
	
--	Foreign key (Price) References Purchase(Price)
--	)
--End
--Go
----Create a cart to store User Information Wants to purchase
--if Not Exists (Select * from sys.objects where name = 'Search_Engine')
--Begin
--	Create Table Search_Engine(
--	Customer_Id Int Identity(1,1) Not Null,
--	Genres_Id int Not Null,
--	Foreign key (Customer_Id) References Users(Users_Id),
	
--	)
--End
--Go
--IF EXISTS (
--        SELECT type_desc, type
--        FROM sys.procedures WITH(NOLOCK)
--        WHERE NAME = 'addMovies'
--            AND type = 'P'
--      )
--     DROP PROCEDURE dbo.addMovies
--GO
----Adding Customer Data To Users 
--CREATE PROC dbo.addMovies @Name varchar(100), @Price varchar(100)
--AS
--BEGIN
----To Enter Data Only If It Does Not Exist 
	
--		Insert into Movies(Name,Price) Values(@Name,@Price)
--		select max(Movie_Id) From Movies where Name =  @Name And Price = @Price
--END

--Go  
--IF EXISTS (
--        SELECT type_desc, type
--        FROM sys.procedures WITH(NOLOCK)
--        WHERE NAME = 'GetGenresId'
--            AND type = 'P'
--      )
--     DROP PROCEDURE dbo.GetGenresId
--GO
----Adding Customer Data To Users 
--CREATE PROC dbo.GetGenresId @Name Int
--AS
--BEGIN
----To Enter Data Only If It Does Not Exist 
	
--		Select Genres_Id from Geners Where Name = @Name
--END

--Go 

--Go  
--IF EXISTS (
--        SELECT type_desc, type
--        FROM sys.procedures WITH(NOLOCK)
--        WHERE NAME = 'addGenres'
--            AND type = 'P'
--      )
--     DROP PROCEDURE dbo.addGenres
--GO
----Adding Customer Data To Users 
--CREATE PROC dbo.addGenres @genres_Id Int, @movie_Id Int
--AS
--BEGIN
----To Enter Data Only If It Does Not Exist 
	
--		Insert into Geners_in_Movies(Genres_Id,Movie_Id) Values(@genres_Id,@movie_Id)
--END

--Go 

--IF EXISTS (
--        SELECT type_desc, type
--        FROM sys.procedures WITH(NOLOCK)
--        WHERE NAME = 'getMovies'
--            AND type = 'P'
--      )
--     DROP PROCEDURE dbo.getMovies
--GO
----Adding Customer Data To Users 
--CREATE PROC dbo.getMovies 
--AS
--BEGIN
----To Enter Data Only If It Does Not Exist 
	
--		Select Movies.Name As Movie_Name, Movies.Price, Geners.Name As Geners_Name from Movies 
--		Inner join Geners_in_Movies on Geners_in_Movies.Movie_Id = Movies.Movie_Id Inner Join Geners On Geners.Genres_Id = Geners_in_Movies.Genres_Id
--END

--Go 

--Insert into Movies Values('Avengers',100)

--Insert into Geners Values
--('Thriller'),
--('Comedy'),
--()

--drop table Cart
--drop table Purchase
--drop table Search_Engine
--drop table users
